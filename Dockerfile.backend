# Etapa 1: Build con Bun y herramientas de desarrollo
FROM oven/bun:alpine AS builder

WORKDIR /app

# Copiar archivos de dependencias primero
COPY bun.lockb package.json ./

# Instalar TODAS las dependencias, incluyendo devDependencies
RUN bun install --frozen-lockfile

# Copiar el resto del c贸digo fuente
COPY . .

# Compilar el proyecto NestJS
RUN bun run build


# Etapa 2: Imagen final para producci贸n
FROM oven/bun:alpine AS runner

WORKDIR /app

# Copiar solo los artefactos necesarios desde el builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/bun.lockb ./bun.lockb

# Incluir solo las dependencias de producci贸n
RUN bun install --frozen-lockfile --production

# OPCIONAL: copiar herramientas de seed (para que docker exec funcione)
# Puedes eliminar esta parte si vas a usar un contenedor aparte para sembrar
COPY --from=builder /app/node_modules/.bin /app/node_modules/.bin
COPY --from=builder /app/node_modules /app/node_modules
COPY --from=builder /app/drizzle ./drizzle
COPY --from=builder /app/tsconfig.json ./
COPY --from=builder /app/tsx.config.* ./   # si usas config especial

# Exponer el puerto
EXPOSE 3000

# Comando de producci贸n (usa script correcto)
CMD ["bun", "run", "start:prod"]
