# Etapa 1: Construcci贸n con Bun
FROM oven/bun:alpine AS builder

WORKDIR /app

# Copiar archivos necesarios
COPY bun.lock package.json . 
RUN bun install

# Copiar todo el c贸digo fuente
COPY . .

# Construir el proyecto
RUN bun run build

# Etapa 2: Imagen ligera para producci贸n con Node.js
FROM node:22.15-alpine

WORKDIR /app

# Instalar bash, curl, python3 y compiladores para m贸dulos nativos
RUN apk add --no-cache bash curl python3 g++ make && \
    curl -fsSL https://bun.sh/install | bash

ENV PATH="/root/.bun/bin:$PATH"

# Copiar artefactos desde la etapa builder
COPY --from=builder /app/package.json .
COPY --from=builder /app/bun.lock ./bun.lock
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/drizzle ./drizzle

# Ya no copiamos /app/db porque no existe. Si luego deseas semillar,
# lo haces con `bun` desde un `docker exec`.

# Exponer puerto
EXPOSE 3000

# Comando de arranque
CMD ["node", "dist/main"]
